/*
 * Generated by dtrace(1M).
 */

#ifndef	_DTRACE_H
#define	_DTRACE_H

#include <unistd.h>

#ifdef	__cplusplus
extern "C" {
#endif

#define PBRT_STABILITY "___dtrace_stability$PBRT$v1$1_1_0_1_1_0_1_1_0_1_1_0_1_1_0"

#define PBRT_TYPEDEFS "___dtrace_typedefs$PBRT$v2"

#if !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED

#define	PBRT_ACCESSED_TEXEL(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$accessed_texel$v1$766f6964202a$696e74$696e74$696e74(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_ACCESSED_TEXEL_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$accessed_texel$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_ALLOCATED_CACHED_TRANSFORM() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$allocated_cached_transform$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_ALLOCATED_CACHED_TRANSFORM_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$allocated_cached_transform$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_AREA_LIGHT_FINISHED_SAMPLE() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$area_light_finished_sample$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_AREA_LIGHT_FINISHED_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$area_light_finished_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_AREA_LIGHT_STARTED_SAMPLE() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$area_light_started_sample$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_AREA_LIGHT_STARTED_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$area_light_started_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_ATOMIC_MEMORY_OP() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$atomic_memory_op$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_ATOMIC_MEMORY_OP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$atomic_memory_op$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_FINISHED_CONSTRUCTION(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_finished_construction$v1$73747275637420425648416363656c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_FINISHED_CONSTRUCTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_finished_construction$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTION_FINISHED() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersection_finished$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTION_FINISHED_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersection_finished$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_HIT(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersection_primitive_hit$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_HIT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersection_primitive_hit$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_MISSED(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersection_primitive_missed$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_MISSED_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersection_primitive_missed$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_TEST(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersection_primitive_test$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersection_primitive_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTION_STARTED(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersection_started$v1$73747275637420425648416363656c202a$73747275637420526179202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTION_STARTED_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersection_started$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTION_TRAVERSED_INTERIOR_NODE(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersection_traversed_interior_node$v1$737472756374204c696e6561724256484e6f6465202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTION_TRAVERSED_INTERIOR_NODE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersection_traversed_interior_node$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTION_TRAVERSED_LEAF_NODE(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersection_traversed_leaf_node$v1$737472756374204c696e6561724256484e6f6465202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTION_TRAVERSED_LEAF_NODE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersection_traversed_leaf_node$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTIONP_FINISHED() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersectionp_finished$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTIONP_FINISHED_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersectionp_finished$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_HIT(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersectionp_primitive_hit$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_HIT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersectionp_primitive_hit$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_MISSED(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersectionp_primitive_missed$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_MISSED_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersectionp_primitive_missed$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_TEST(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersectionp_primitive_test$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersectionp_primitive_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTIONP_STARTED(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersectionp_started$v1$73747275637420425648416363656c202a$73747275637420526179202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTIONP_STARTED_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersectionp_started$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTIONP_TRAVERSED_INTERIOR_NODE(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersectionp_traversed_interior_node$v1$737472756374204c696e6561724256484e6f6465202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTIONP_TRAVERSED_INTERIOR_NODE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersectionp_traversed_interior_node$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_INTERSECTIONP_TRAVERSED_LEAF_NODE(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_intersectionp_traversed_leaf_node$v1$737472756374204c696e6561724256484e6f6465202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_INTERSECTIONP_TRAVERSED_LEAF_NODE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_intersectionp_traversed_leaf_node$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_BVH_STARTED_CONSTRUCTION(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$bvh_started_construction$v1$73747275637420425648416363656c202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_BVH_STARTED_CONSTRUCTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$bvh_started_construction$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_CREATED_SHAPE(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$created_shape$v1$737472756374205368617065202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_CREATED_SHAPE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$created_shape$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_CREATED_TRIANGLE(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$created_triangle$v1$73747275637420547269616e676c65202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_CREATED_TRIANGLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$created_triangle$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_ADDING_IMAGE_SAMPLE() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_adding_image_sample$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_ADDING_IMAGE_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_adding_image_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_BSDF_EVAL() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_bsdf_eval$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_BSDF_EVAL_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_bsdf_eval$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_BSDF_PDF() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_bsdf_pdf$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_BSDF_PDF_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_bsdf_pdf$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_BSDF_SAMPLE() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_bsdf_sample$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_BSDF_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_bsdf_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_BSDF_SHADING(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_bsdf_shading$v1$73747275637420526179202a$7374727563742042534446202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_BSDF_SHADING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_bsdf_shading$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_BSSRDF_SHADING(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_bssrdf_shading$v1$73747275637420526179202a$73747275637420425353524446202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_BSSRDF_SHADING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_bssrdf_shading$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_CAMERA_RAY_INTEGRATION(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_camera_ray_integration$v1$73747275637420526179446966666572656e7469616c202a$7374727563742053616d706c65202a$766f6964202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_CAMERA_RAY_INTEGRATION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_camera_ray_integration$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_EWA_TEXTURE_LOOKUP() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_ewa_texture_lookup$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_EWA_TEXTURE_LOOKUP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_ewa_texture_lookup$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_GENERATING_CAMERA_RAY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_generating_camera_ray$v1$7374727563742043616d65726153616d706c65202a$73747275637420526179446966666572656e7469616c202a$666c6f6174(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_GENERATING_CAMERA_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_generating_camera_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_PARSING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_parsing$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_PARSING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_parsing$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_PREPROCESSING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_preprocessing$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_PREPROCESSING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_preprocessing$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_RAY_INTERSECTION(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_ray_intersection$v1$73747275637420526179202a$73747275637420496e74657273656374696f6e202a$696e74(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_RAY_INTERSECTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_ray_intersection$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_RAY_INTERSECTIONP(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_ray_intersectionp$v1$73747275637420526179202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_RAY_INTERSECTIONP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_ray_intersectionp$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_RENDERING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_rendering$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_RENDERING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_rendering$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_RENDERTASK(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_rendertask$v1$696e74(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_RENDERTASK_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_rendertask$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_SPECULAR_REFLECTION_RAY(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_specular_reflection_ray$v1$73747275637420526179446966666572656e7469616c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_SPECULAR_REFLECTION_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_specular_reflection_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_SPECULAR_REFRACTION_RAY(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_specular_refraction_ray$v1$73747275637420526179446966666572656e7469616c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_SPECULAR_REFRACTION_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_specular_refraction_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_TASK(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_task$v1$737472756374205461736b202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_TASK_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_task$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FINISHED_TRILINEAR_TEXTURE_LOOKUP() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$finished_trilinear_texture_lookup$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FINISHED_TRILINEAR_TEXTURE_LOOKUP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$finished_trilinear_texture_lookup$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_FOUND_CACHED_TRANSFORM() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$found_cached_transform$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_FOUND_CACHED_TRANSFORM_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$found_cached_transform$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_BOUNDS_AND_RESOLUTION(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_bounds_and_resolution$v1$7374727563742042426f78202a$696e74202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_BOUNDS_AND_RESOLUTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_bounds_and_resolution$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_FINISHED_CONSTRUCTION(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_finished_construction$v1$7374727563742047726964416363656c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_FINISHED_CONSTRUCTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_finished_construction$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_INTERSECTION_TEST(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_intersection_test$v1$7374727563742047726964416363656c202a$73747275637420526179202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_INTERSECTION_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_intersection_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_INTERSECTIONP_TEST(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_intersectionp_test$v1$7374727563742047726964416363656c202a$73747275637420526179202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_INTERSECTIONP_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_intersectionp_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_RAY_MISSED_BOUNDS() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_ray_missed_bounds$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_RAY_MISSED_BOUNDS_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_ray_missed_bounds$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_RAY_PRIMITIVE_HIT(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_ray_primitive_hit$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_RAY_PRIMITIVE_HIT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_ray_primitive_hit$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_RAY_PRIMITIVE_INTERSECTION_TEST(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_ray_primitive_intersection_test$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_RAY_PRIMITIVE_INTERSECTION_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_ray_primitive_intersection_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_RAY_PRIMITIVE_INTERSECTIONP_TEST(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_ray_primitive_intersectionp_test$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_RAY_PRIMITIVE_INTERSECTIONP_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_ray_primitive_intersectionp_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_RAY_TRAVERSED_VOXEL(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_ray_traversed_voxel$v1$696e74205b335d$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_RAY_TRAVERSED_VOXEL_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_ray_traversed_voxel$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_STARTED_CONSTRUCTION(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_started_construction$v1$7374727563742047726964416363656c202a$756e7369676e656420696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_STARTED_CONSTRUCTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_started_construction$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_GRID_VOXELIZED_PRIMITIVE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$grid_voxelized_primitive$v1$696e74202a$696e74202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_GRID_VOXELIZED_PRIMITIVE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$grid_voxelized_primitive$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_INFINITE_LIGHT_FINISHED_PDF() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$infinite_light_finished_pdf$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_INFINITE_LIGHT_FINISHED_PDF_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$infinite_light_finished_pdf$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_INFINITE_LIGHT_FINISHED_SAMPLE() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$infinite_light_finished_sample$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_INFINITE_LIGHT_FINISHED_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$infinite_light_finished_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_INFINITE_LIGHT_STARTED_PDF() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$infinite_light_started_pdf$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_INFINITE_LIGHT_STARTED_PDF_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$infinite_light_started_pdf$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_INFINITE_LIGHT_STARTED_SAMPLE() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$infinite_light_started_sample$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_INFINITE_LIGHT_STARTED_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$infinite_light_started_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_IRRADIANCE_CACHE_ADDED_NEW_SAMPLE(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$irradiance_cache_added_new_sample$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a$666c6f6174$766f6964202a$73747275637420566563746f72202a$666c6f6174(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_IRRADIANCE_CACHE_ADDED_NEW_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$irradiance_cache_added_new_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_IRRADIANCE_CACHE_CHECKED_SAMPLE(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$irradiance_cache_checked_sample$v1$73747275637420497272616469616e636553616d706c65202a$666c6f6174$666c6f6174(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_IRRADIANCE_CACHE_CHECKED_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$irradiance_cache_checked_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_IRRADIANCE_CACHE_FINISHED_COMPUTING_IRRADIANCE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$irradiance_cache_finished_computing_irradiance$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_IRRADIANCE_CACHE_FINISHED_COMPUTING_IRRADIANCE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$irradiance_cache_finished_computing_irradiance$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_IRRADIANCE_CACHE_FINISHED_INTERPOLATION(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$irradiance_cache_finished_interpolation$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a$696e74$696e74(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_IRRADIANCE_CACHE_FINISHED_INTERPOLATION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$irradiance_cache_finished_interpolation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_IRRADIANCE_CACHE_FINISHED_RAY(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$irradiance_cache_finished_ray$v1$73747275637420526179446966666572656e7469616c202a$666c6f6174$766f6964202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_IRRADIANCE_CACHE_FINISHED_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$irradiance_cache_finished_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_IRRADIANCE_CACHE_STARTED_COMPUTING_IRRADIANCE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$irradiance_cache_started_computing_irradiance$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_IRRADIANCE_CACHE_STARTED_COMPUTING_IRRADIANCE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$irradiance_cache_started_computing_irradiance$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_IRRADIANCE_CACHE_STARTED_INTERPOLATION(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$irradiance_cache_started_interpolation$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_IRRADIANCE_CACHE_STARTED_INTERPOLATION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$irradiance_cache_started_interpolation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_IRRADIANCE_CACHE_STARTED_RAY(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$irradiance_cache_started_ray$v1$73747275637420526179446966666572656e7469616c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_IRRADIANCE_CACHE_STARTED_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$irradiance_cache_started_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_CREATED_INTERIOR_NODE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_created_interior_node$v1$696e74$666c6f6174(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_CREATED_INTERIOR_NODE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_created_interior_node$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_CREATED_LEAF(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_created_leaf$v1$696e74$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_CREATED_LEAF_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_created_leaf$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_FINISHED_CONSTRUCTION(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_finished_construction$v1$737472756374204b6454726565416363656c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_FINISHED_CONSTRUCTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_finished_construction$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTION_FINISHED() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersection_finished$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTION_FINISHED_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersection_finished$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTION_HIT(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersection_hit$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTION_HIT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersection_hit$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTION_PRIMITIVE_TEST(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersection_primitive_test$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTION_PRIMITIVE_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersection_primitive_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTION_TEST(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersection_test$v1$737472756374204b6454726565416363656c202a$73747275637420526179202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTION_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersection_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTION_TRAVERSED_INTERIOR_NODE(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersection_traversed_interior_node$v1$737472756374204b64416363656c4e6f6465202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTION_TRAVERSED_INTERIOR_NODE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersection_traversed_interior_node$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTION_TRAVERSED_LEAF_NODE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersection_traversed_leaf_node$v1$737472756374204b64416363656c4e6f6465202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTION_TRAVERSED_LEAF_NODE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersection_traversed_leaf_node$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTIONP_HIT(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersectionp_hit$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_HIT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersectionp_hit$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTIONP_MISSED() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersectionp_missed$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_MISSED_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersectionp_missed$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTIONP_PRIMITIVE_TEST(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersectionp_primitive_test$v1$737472756374205072696d6974697665202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_PRIMITIVE_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersectionp_primitive_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTIONP_TEST(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersectionp_test$v1$737472756374204b6454726565416363656c202a$73747275637420526179202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersectionp_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTIONP_TRAVERSED_INTERIOR_NODE(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersectionp_traversed_interior_node$v1$737472756374204b64416363656c4e6f6465202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_TRAVERSED_INTERIOR_NODE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersectionp_traversed_interior_node$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_INTERSECTIONP_TRAVERSED_LEAF_NODE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_intersectionp_traversed_leaf_node$v1$737472756374204b64416363656c4e6f6465202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_TRAVERSED_LEAF_NODE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_intersectionp_traversed_leaf_node$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_RAY_MISSED_BOUNDS() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_ray_missed_bounds$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_RAY_MISSED_BOUNDS_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_ray_missed_bounds$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_KDTREE_STARTED_CONSTRUCTION(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$kdtree_started_construction$v1$737472756374204b6454726565416363656c202a$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_KDTREE_STARTED_CONSTRUCTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$kdtree_started_construction$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_LOADED_IMAGE_MAP(arg0, arg1, arg2, arg3, arg4) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$loaded_image_map$v1$63686172202a$696e74$696e74$696e74$766f6964202a(arg0, arg1, arg2, arg3, arg4); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_LOADED_IMAGE_MAP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$loaded_image_map$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MIPMAP_EWA_FILTER(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mipmap_ewa_filter$v1$766f6964202a$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$696e74(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MIPMAP_EWA_FILTER_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mipmap_ewa_filter$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MIPMAP_TRILINEAR_FILTER(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mipmap_trilinear_filter$v1$766f6964202a$666c6f6174$666c6f6174$666c6f6174$666c6f6174$696e74(arg0, arg1, arg2, arg3, arg4, arg5); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MIPMAP_TRILINEAR_FILTER_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mipmap_trilinear_filter$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_ACCEPTED_MUTATION(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_accepted_mutation$v1$666c6f6174$737472756374204d4c5453616d706c65202a$737472756374204d4c5453616d706c65202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_ACCEPTED_MUTATION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_accepted_mutation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_BOOTSTRAPPING(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_bootstrapping$v1$666c6f6174(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_BOOTSTRAPPING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_bootstrapping$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_DIRECTLIGHTING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_directlighting$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_DIRECTLIGHTING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_directlighting$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_DISPLAY_UPDATE() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_display_update$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_DISPLAY_UPDATE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_display_update$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_ESTIMATE_DIRECT() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_estimate_direct$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_ESTIMATE_DIRECT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_estimate_direct$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_GENERATE_PATH() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_generate_path$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_GENERATE_PATH_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_generate_path$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_LBIDIR() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_lbidir$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_LBIDIR_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_lbidir$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_LPATH() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_lpath$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_LPATH_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_lpath$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_MLT_TASK(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_mlt_task$v1$737472756374204d4c545461736b202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_MLT_TASK_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_mlt_task$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_MUTATION() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_mutation$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_MUTATION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_mutation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_RENDERING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_rendering$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_RENDERING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_rendering$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_SAMPLE_LIGHT_FOR_BIDIR() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_sample_light_for_bidir$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_SAMPLE_LIGHT_FOR_BIDIR_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_sample_light_for_bidir$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_SAMPLE_SPLAT() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_sample_splat$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_SAMPLE_SPLAT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_sample_splat$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_FINISHED_TASK_INIT() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_finished_task_init$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_FINISHED_TASK_INIT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_finished_task_init$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_REJECTED_MUTATION(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_rejected_mutation$v1$666c6f6174$737472756374204d4c5453616d706c65202a$737472756374204d4c5453616d706c65202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_REJECTED_MUTATION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_rejected_mutation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_BOOTSTRAPPING(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_bootstrapping$v1$696e74(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_BOOTSTRAPPING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_bootstrapping$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_DIRECTLIGHTING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_directlighting$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_DIRECTLIGHTING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_directlighting$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_DISPLAY_UPDATE() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_display_update$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_DISPLAY_UPDATE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_display_update$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_ESTIMATE_DIRECT() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_estimate_direct$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_ESTIMATE_DIRECT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_estimate_direct$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_GENERATE_PATH() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_generate_path$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_GENERATE_PATH_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_generate_path$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_LBIDIR() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_lbidir$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_LBIDIR_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_lbidir$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_LPATH() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_lpath$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_LPATH_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_lpath$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_MLT_TASK(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_mlt_task$v1$737472756374204d4c545461736b202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_MLT_TASK_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_mlt_task$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_MUTATION() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_mutation$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_MUTATION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_mutation$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_RENDERING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_rendering$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_RENDERING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_rendering$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_SAMPLE_LIGHT_FOR_BIDIR() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_sample_light_for_bidir$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_SAMPLE_LIGHT_FOR_BIDIR_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_sample_light_for_bidir$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_SAMPLE_SPLAT() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_sample_splat$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_SAMPLE_SPLAT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_sample_splat$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_MLT_STARTED_TASK_INIT() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$mlt_started_task_init$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_MLT_STARTED_TASK_INIT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$mlt_started_task_init$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_PHOTON_MAP_DEPOSITED_CAUSTIC_PHOTON(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$photon_map_deposited_caustic_photon$v1$73747275637420446966666572656e7469616c47656f6d65747279202a$766f6964202a$73747275637420566563746f72202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_PHOTON_MAP_DEPOSITED_CAUSTIC_PHOTON_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$photon_map_deposited_caustic_photon$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_PHOTON_MAP_DEPOSITED_DIRECT_PHOTON(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$photon_map_deposited_direct_photon$v1$73747275637420446966666572656e7469616c47656f6d65747279202a$766f6964202a$73747275637420566563746f72202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_PHOTON_MAP_DEPOSITED_DIRECT_PHOTON_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$photon_map_deposited_direct_photon$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_PHOTON_MAP_DEPOSITED_INDIRECT_PHOTON(arg0, arg1, arg2) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$photon_map_deposited_indirect_photon$v1$73747275637420446966666572656e7469616c47656f6d65747279202a$766f6964202a$73747275637420566563746f72202a(arg0, arg1, arg2); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_PHOTON_MAP_DEPOSITED_INDIRECT_PHOTON_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$photon_map_deposited_indirect_photon$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_PHOTON_MAP_FINISHED_GATHER_RAY(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$photon_map_finished_gather_ray$v1$73747275637420526179446966666572656e7469616c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_PHOTON_MAP_FINISHED_GATHER_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$photon_map_finished_gather_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_PHOTON_MAP_FINISHED_LOOKUP(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$photon_map_finished_lookup$v1$73747275637420446966666572656e7469616c47656f6d65747279202a$696e74$696e74$766f6964202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_PHOTON_MAP_FINISHED_LOOKUP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$photon_map_finished_lookup$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_PHOTON_MAP_FINISHED_RAY_PATH(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$photon_map_finished_ray_path$v1$73747275637420526179446966666572656e7469616c202a$766f6964202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_PHOTON_MAP_FINISHED_RAY_PATH_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$photon_map_finished_ray_path$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_PHOTON_MAP_STARTED_GATHER_RAY(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$photon_map_started_gather_ray$v1$73747275637420526179446966666572656e7469616c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_PHOTON_MAP_STARTED_GATHER_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$photon_map_started_gather_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_PHOTON_MAP_STARTED_LOOKUP(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$photon_map_started_lookup$v1$73747275637420446966666572656e7469616c47656f6d65747279202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_PHOTON_MAP_STARTED_LOOKUP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$photon_map_started_lookup$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_PHOTON_MAP_STARTED_RAY_PATH(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$photon_map_started_ray_path$v1$73747275637420526179446966666572656e7469616c202a$766f6964202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_PHOTON_MAP_STARTED_RAY_PATH_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$photon_map_started_ray_path$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_RAY_TRIANGLE_INTERSECTION_HIT(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$ray_triangle_intersection_hit$v1$73747275637420526179202a$666c6f6174(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTION_HIT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$ray_triangle_intersection_hit$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_RAY_TRIANGLE_INTERSECTION_TEST(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$ray_triangle_intersection_test$v1$73747275637420526179202a$73747275637420547269616e676c65202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTION_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$ray_triangle_intersection_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_RAY_TRIANGLE_INTERSECTIONP_HIT(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$ray_triangle_intersectionp_hit$v1$73747275637420526179202a$666c6f6174(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTIONP_HIT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$ray_triangle_intersectionp_hit$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_RAY_TRIANGLE_INTERSECTIONP_TEST(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$ray_triangle_intersectionp_test$v1$73747275637420526179202a$73747275637420547269616e676c65202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTIONP_TEST_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$ray_triangle_intersectionp_test$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_RNG_FINISHED_RANDOM_FLOAT() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$rng_finished_random_float$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_RNG_FINISHED_RANDOM_FLOAT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$rng_finished_random_float$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_RNG_FINISHED_TABLEGEN() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$rng_finished_tablegen$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_RNG_FINISHED_TABLEGEN_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$rng_finished_tablegen$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_RNG_STARTED_RANDOM_FLOAT() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$rng_started_random_float$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_RNG_STARTED_RANDOM_FLOAT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$rng_started_random_float$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_RNG_STARTED_TABLEGEN() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$rng_started_tablegen$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_RNG_STARTED_TABLEGEN_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$rng_started_tablegen$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SAMPLE_OUTSIDE_IMAGE_EXTENT(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$sample_outside_image_extent$v1$7374727563742043616d65726153616d706c65202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SAMPLE_OUTSIDE_IMAGE_EXTENT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$sample_outside_image_extent$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_ADDING_IMAGE_SAMPLE(arg0, arg1, arg2, arg3) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_adding_image_sample$v1$7374727563742053616d706c65202a$73747275637420526179446966666572656e7469616c202a$766f6964202a$766f6964202a(arg0, arg1, arg2, arg3); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_ADDING_IMAGE_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_adding_image_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_BSDF_EVAL() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_bsdf_eval$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_BSDF_EVAL_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_bsdf_eval$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_BSDF_PDF() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_bsdf_pdf$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_BSDF_PDF_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_bsdf_pdf$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_BSDF_SAMPLE() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_bsdf_sample$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_BSDF_SAMPLE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_bsdf_sample$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_BSDF_SHADING(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_bsdf_shading$v1$73747275637420526179202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_BSDF_SHADING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_bsdf_shading$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_BSSRDF_SHADING(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_bssrdf_shading$v1$73747275637420526179202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_BSSRDF_SHADING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_bssrdf_shading$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_CAMERA_RAY_INTEGRATION(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_camera_ray_integration$v1$73747275637420526179446966666572656e7469616c202a$7374727563742053616d706c65202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_CAMERA_RAY_INTEGRATION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_camera_ray_integration$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_EWA_TEXTURE_LOOKUP(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_ewa_texture_lookup$v1$666c6f6174$666c6f6174(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_EWA_TEXTURE_LOOKUP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_ewa_texture_lookup$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_GENERATING_CAMERA_RAY(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_generating_camera_ray$v1$7374727563742043616d65726153616d706c65202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_GENERATING_CAMERA_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_generating_camera_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_PARSING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_parsing$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_PARSING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_parsing$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_PREPROCESSING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_preprocessing$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_PREPROCESSING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_preprocessing$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_RAY_INTERSECTION(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_ray_intersection$v1$73747275637420526179202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_RAY_INTERSECTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_ray_intersection$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_RAY_INTERSECTIONP(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_ray_intersectionp$v1$73747275637420526179202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_RAY_INTERSECTIONP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_ray_intersectionp$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_RENDERING() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_rendering$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_RENDERING_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_rendering$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_RENDERTASK(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_rendertask$v1$696e74(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_RENDERTASK_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_rendertask$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_SPECULAR_REFLECTION_RAY(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_specular_reflection_ray$v1$73747275637420526179446966666572656e7469616c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_SPECULAR_REFLECTION_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_specular_reflection_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_SPECULAR_REFRACTION_RAY(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_specular_refraction_ray$v1$73747275637420526179446966666572656e7469616c202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_SPECULAR_REFRACTION_RAY_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_specular_refraction_ray$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_TASK(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_task$v1$737472756374205461736b202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_TASK_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_task$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_STARTED_TRILINEAR_TEXTURE_LOOKUP(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$started_trilinear_texture_lookup$v1$666c6f6174$666c6f6174(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_STARTED_TRILINEAR_TEXTURE_LOOKUP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$started_trilinear_texture_lookup$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_ADDED_INTERIOR_CONTRIBUTION(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_added_interior_contribution$v1$73747275637420537562737572666163654f63747265654e6f6465202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_ADDED_INTERIOR_CONTRIBUTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_added_interior_contribution$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_ADDED_POINT_CONTRIBUTION(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_added_point_contribution$v1$73747275637420497272616469616e6365506f696e74202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_ADDED_POINT_CONTRIBUTION_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_added_point_contribution$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_ADDED_POINT_TO_OCTREE(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_added_point_to_octree$v1$7374727563742053757266616365506f696e74202a$666c6f6174(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_ADDED_POINT_TO_OCTREE_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_added_point_to_octree$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_COMPUTED_IRRADIANCE_AT_POINT(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_computed_irradiance_at_point$v1$7374727563742053757266616365506f696e74202a$766f6964202a(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_COMPUTED_IRRADIANCE_AT_POINT_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_computed_irradiance_at_point$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_FINISHED_COMPUTING_IRRADIANCE_VALUES() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_finished_computing_irradiance_values$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_FINISHED_COMPUTING_IRRADIANCE_VALUES_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_finished_computing_irradiance_values$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_FINISHED_OCTREE_LOOKUP() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_finished_octree_lookup$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_FINISHED_OCTREE_LOOKUP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_finished_octree_lookup$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_FINISHED_RAYS_FOR_POINTS(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_finished_rays_for_points$v1$696e74$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_FINISHED_RAYS_FOR_POINTS_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_finished_rays_for_points$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_STARTED_COMPUTING_IRRADIANCE_VALUES() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_started_computing_irradiance_values$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_STARTED_COMPUTING_IRRADIANCE_VALUES_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_started_computing_irradiance_values$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_STARTED_OCTREE_LOOKUP(arg0) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_started_octree_lookup$v1$73747275637420506f696e74202a(arg0); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_STARTED_OCTREE_LOOKUP_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_started_octree_lookup$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUBSURFACE_STARTED_RAYS_FOR_POINTS() \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$subsurface_started_rays_for_points$v1(); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUBSURFACE_STARTED_RAYS_FOR_POINTS_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$subsurface_started_rays_for_points$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUPERSAMPLE_PIXEL_NO(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$supersample_pixel_no$v1$696e74$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUPERSAMPLE_PIXEL_NO_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$supersample_pixel_no$v1(); \
		__asm__ volatile(""); \
		_r; })
#define	PBRT_SUPERSAMPLE_PIXEL_YES(arg0, arg1) \
do { \
	__asm__ volatile(".reference " PBRT_TYPEDEFS); \
	__dtrace_probe$PBRT$supersample_pixel_yes$v1$696e74$696e74(arg0, arg1); \
	__asm__ volatile(".reference " PBRT_STABILITY); \
} while (0)
#define	PBRT_SUPERSAMPLE_PIXEL_YES_ENABLED() \
	({ int _r = __dtrace_isenabled$PBRT$supersample_pixel_yes$v1(); \
		__asm__ volatile(""); \
		_r; })


extern void __dtrace_probe$PBRT$accessed_texel$v1$766f6964202a$696e74$696e74$696e74(const void *, int, int, int);
extern int __dtrace_isenabled$PBRT$accessed_texel$v1(void);
extern void __dtrace_probe$PBRT$allocated_cached_transform$v1(void);
extern int __dtrace_isenabled$PBRT$allocated_cached_transform$v1(void);
extern void __dtrace_probe$PBRT$area_light_finished_sample$v1(void);
extern int __dtrace_isenabled$PBRT$area_light_finished_sample$v1(void);
extern void __dtrace_probe$PBRT$area_light_started_sample$v1(void);
extern int __dtrace_isenabled$PBRT$area_light_started_sample$v1(void);
extern void __dtrace_probe$PBRT$atomic_memory_op$v1(void);
extern int __dtrace_isenabled$PBRT$atomic_memory_op$v1(void);
extern void __dtrace_probe$PBRT$bvh_finished_construction$v1$73747275637420425648416363656c202a(const struct BVHAccel *);
extern int __dtrace_isenabled$PBRT$bvh_finished_construction$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersection_finished$v1(void);
extern int __dtrace_isenabled$PBRT$bvh_intersection_finished$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersection_primitive_hit$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$bvh_intersection_primitive_hit$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersection_primitive_missed$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$bvh_intersection_primitive_missed$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersection_primitive_test$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$bvh_intersection_primitive_test$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersection_started$v1$73747275637420425648416363656c202a$73747275637420526179202a(const struct BVHAccel *, const struct Ray *);
extern int __dtrace_isenabled$PBRT$bvh_intersection_started$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersection_traversed_interior_node$v1$737472756374204c696e6561724256484e6f6465202a(const struct LinearBVHNode *);
extern int __dtrace_isenabled$PBRT$bvh_intersection_traversed_interior_node$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersection_traversed_leaf_node$v1$737472756374204c696e6561724256484e6f6465202a(const struct LinearBVHNode *);
extern int __dtrace_isenabled$PBRT$bvh_intersection_traversed_leaf_node$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersectionp_finished$v1(void);
extern int __dtrace_isenabled$PBRT$bvh_intersectionp_finished$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersectionp_primitive_hit$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$bvh_intersectionp_primitive_hit$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersectionp_primitive_missed$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$bvh_intersectionp_primitive_missed$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersectionp_primitive_test$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$bvh_intersectionp_primitive_test$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersectionp_started$v1$73747275637420425648416363656c202a$73747275637420526179202a(const struct BVHAccel *, const struct Ray *);
extern int __dtrace_isenabled$PBRT$bvh_intersectionp_started$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersectionp_traversed_interior_node$v1$737472756374204c696e6561724256484e6f6465202a(const struct LinearBVHNode *);
extern int __dtrace_isenabled$PBRT$bvh_intersectionp_traversed_interior_node$v1(void);
extern void __dtrace_probe$PBRT$bvh_intersectionp_traversed_leaf_node$v1$737472756374204c696e6561724256484e6f6465202a(const struct LinearBVHNode *);
extern int __dtrace_isenabled$PBRT$bvh_intersectionp_traversed_leaf_node$v1(void);
extern void __dtrace_probe$PBRT$bvh_started_construction$v1$73747275637420425648416363656c202a$696e74(const struct BVHAccel *, int);
extern int __dtrace_isenabled$PBRT$bvh_started_construction$v1(void);
extern void __dtrace_probe$PBRT$created_shape$v1$737472756374205368617065202a(const struct Shape *);
extern int __dtrace_isenabled$PBRT$created_shape$v1(void);
extern void __dtrace_probe$PBRT$created_triangle$v1$73747275637420547269616e676c65202a(const struct Triangle *);
extern int __dtrace_isenabled$PBRT$created_triangle$v1(void);
extern void __dtrace_probe$PBRT$finished_adding_image_sample$v1(void);
extern int __dtrace_isenabled$PBRT$finished_adding_image_sample$v1(void);
extern void __dtrace_probe$PBRT$finished_bsdf_eval$v1(void);
extern int __dtrace_isenabled$PBRT$finished_bsdf_eval$v1(void);
extern void __dtrace_probe$PBRT$finished_bsdf_pdf$v1(void);
extern int __dtrace_isenabled$PBRT$finished_bsdf_pdf$v1(void);
extern void __dtrace_probe$PBRT$finished_bsdf_sample$v1(void);
extern int __dtrace_isenabled$PBRT$finished_bsdf_sample$v1(void);
extern void __dtrace_probe$PBRT$finished_bsdf_shading$v1$73747275637420526179202a$7374727563742042534446202a(const struct Ray *, const struct BSDF *);
extern int __dtrace_isenabled$PBRT$finished_bsdf_shading$v1(void);
extern void __dtrace_probe$PBRT$finished_bssrdf_shading$v1$73747275637420526179202a$73747275637420425353524446202a(const struct Ray *, const struct BSSRDF *);
extern int __dtrace_isenabled$PBRT$finished_bssrdf_shading$v1(void);
extern void __dtrace_probe$PBRT$finished_camera_ray_integration$v1$73747275637420526179446966666572656e7469616c202a$7374727563742053616d706c65202a$766f6964202a(const struct RayDifferential *, const struct Sample *, const void *);
extern int __dtrace_isenabled$PBRT$finished_camera_ray_integration$v1(void);
extern void __dtrace_probe$PBRT$finished_ewa_texture_lookup$v1(void);
extern int __dtrace_isenabled$PBRT$finished_ewa_texture_lookup$v1(void);
extern void __dtrace_probe$PBRT$finished_generating_camera_ray$v1$7374727563742043616d65726153616d706c65202a$73747275637420526179446966666572656e7469616c202a$666c6f6174(const struct CameraSample *, const struct RayDifferential *, float);
extern int __dtrace_isenabled$PBRT$finished_generating_camera_ray$v1(void);
extern void __dtrace_probe$PBRT$finished_parsing$v1(void);
extern int __dtrace_isenabled$PBRT$finished_parsing$v1(void);
extern void __dtrace_probe$PBRT$finished_preprocessing$v1(void);
extern int __dtrace_isenabled$PBRT$finished_preprocessing$v1(void);
extern void __dtrace_probe$PBRT$finished_ray_intersection$v1$73747275637420526179202a$73747275637420496e74657273656374696f6e202a$696e74(const struct Ray *, const struct Intersection *, int);
extern int __dtrace_isenabled$PBRT$finished_ray_intersection$v1(void);
extern void __dtrace_probe$PBRT$finished_ray_intersectionp$v1$73747275637420526179202a$696e74(const struct Ray *, int);
extern int __dtrace_isenabled$PBRT$finished_ray_intersectionp$v1(void);
extern void __dtrace_probe$PBRT$finished_rendering$v1(void);
extern int __dtrace_isenabled$PBRT$finished_rendering$v1(void);
extern void __dtrace_probe$PBRT$finished_rendertask$v1$696e74(int);
extern int __dtrace_isenabled$PBRT$finished_rendertask$v1(void);
extern void __dtrace_probe$PBRT$finished_specular_reflection_ray$v1$73747275637420526179446966666572656e7469616c202a(const struct RayDifferential *);
extern int __dtrace_isenabled$PBRT$finished_specular_reflection_ray$v1(void);
extern void __dtrace_probe$PBRT$finished_specular_refraction_ray$v1$73747275637420526179446966666572656e7469616c202a(const struct RayDifferential *);
extern int __dtrace_isenabled$PBRT$finished_specular_refraction_ray$v1(void);
extern void __dtrace_probe$PBRT$finished_task$v1$737472756374205461736b202a(const struct Task *);
extern int __dtrace_isenabled$PBRT$finished_task$v1(void);
extern void __dtrace_probe$PBRT$finished_trilinear_texture_lookup$v1(void);
extern int __dtrace_isenabled$PBRT$finished_trilinear_texture_lookup$v1(void);
extern void __dtrace_probe$PBRT$found_cached_transform$v1(void);
extern int __dtrace_isenabled$PBRT$found_cached_transform$v1(void);
extern void __dtrace_probe$PBRT$grid_bounds_and_resolution$v1$7374727563742042426f78202a$696e74202a(const struct BBox *, const int *);
extern int __dtrace_isenabled$PBRT$grid_bounds_and_resolution$v1(void);
extern void __dtrace_probe$PBRT$grid_finished_construction$v1$7374727563742047726964416363656c202a(const struct GridAccel *);
extern int __dtrace_isenabled$PBRT$grid_finished_construction$v1(void);
extern void __dtrace_probe$PBRT$grid_intersection_test$v1$7374727563742047726964416363656c202a$73747275637420526179202a(const struct GridAccel *, const struct Ray *);
extern int __dtrace_isenabled$PBRT$grid_intersection_test$v1(void);
extern void __dtrace_probe$PBRT$grid_intersectionp_test$v1$7374727563742047726964416363656c202a$73747275637420526179202a(const struct GridAccel *, const struct Ray *);
extern int __dtrace_isenabled$PBRT$grid_intersectionp_test$v1(void);
extern void __dtrace_probe$PBRT$grid_ray_missed_bounds$v1(void);
extern int __dtrace_isenabled$PBRT$grid_ray_missed_bounds$v1(void);
extern void __dtrace_probe$PBRT$grid_ray_primitive_hit$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$grid_ray_primitive_hit$v1(void);
extern void __dtrace_probe$PBRT$grid_ray_primitive_intersection_test$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$grid_ray_primitive_intersection_test$v1(void);
extern void __dtrace_probe$PBRT$grid_ray_primitive_intersectionp_test$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$grid_ray_primitive_intersectionp_test$v1(void);
extern void __dtrace_probe$PBRT$grid_ray_traversed_voxel$v1$696e74205b335d$696e74(int [3], int);
extern int __dtrace_isenabled$PBRT$grid_ray_traversed_voxel$v1(void);
extern void __dtrace_probe$PBRT$grid_started_construction$v1$7374727563742047726964416363656c202a$756e7369676e656420696e74(const struct GridAccel *, unsigned int);
extern int __dtrace_isenabled$PBRT$grid_started_construction$v1(void);
extern void __dtrace_probe$PBRT$grid_voxelized_primitive$v1$696e74202a$696e74202a(const int *, const int *);
extern int __dtrace_isenabled$PBRT$grid_voxelized_primitive$v1(void);
extern void __dtrace_probe$PBRT$infinite_light_finished_pdf$v1(void);
extern int __dtrace_isenabled$PBRT$infinite_light_finished_pdf$v1(void);
extern void __dtrace_probe$PBRT$infinite_light_finished_sample$v1(void);
extern int __dtrace_isenabled$PBRT$infinite_light_finished_sample$v1(void);
extern void __dtrace_probe$PBRT$infinite_light_started_pdf$v1(void);
extern int __dtrace_isenabled$PBRT$infinite_light_started_pdf$v1(void);
extern void __dtrace_probe$PBRT$infinite_light_started_sample$v1(void);
extern int __dtrace_isenabled$PBRT$infinite_light_started_sample$v1(void);
extern void __dtrace_probe$PBRT$irradiance_cache_added_new_sample$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a$666c6f6174$766f6964202a$73747275637420566563746f72202a$666c6f6174(const struct Point *, const struct Normal *, float, const void *, const struct Vector *, float);
extern int __dtrace_isenabled$PBRT$irradiance_cache_added_new_sample$v1(void);
extern void __dtrace_probe$PBRT$irradiance_cache_checked_sample$v1$73747275637420497272616469616e636553616d706c65202a$666c6f6174$666c6f6174(const struct IrradianceSample *, float, float);
extern int __dtrace_isenabled$PBRT$irradiance_cache_checked_sample$v1(void);
extern void __dtrace_probe$PBRT$irradiance_cache_finished_computing_irradiance$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a(const struct Point *, const struct Normal *);
extern int __dtrace_isenabled$PBRT$irradiance_cache_finished_computing_irradiance$v1(void);
extern void __dtrace_probe$PBRT$irradiance_cache_finished_interpolation$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a$696e74$696e74(const struct Point *, const struct Normal *, int, int);
extern int __dtrace_isenabled$PBRT$irradiance_cache_finished_interpolation$v1(void);
extern void __dtrace_probe$PBRT$irradiance_cache_finished_ray$v1$73747275637420526179446966666572656e7469616c202a$666c6f6174$766f6964202a(const struct RayDifferential *, float, const void *);
extern int __dtrace_isenabled$PBRT$irradiance_cache_finished_ray$v1(void);
extern void __dtrace_probe$PBRT$irradiance_cache_started_computing_irradiance$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a(const struct Point *, const struct Normal *);
extern int __dtrace_isenabled$PBRT$irradiance_cache_started_computing_irradiance$v1(void);
extern void __dtrace_probe$PBRT$irradiance_cache_started_interpolation$v1$73747275637420506f696e74202a$737472756374204e6f726d616c202a(const struct Point *, const struct Normal *);
extern int __dtrace_isenabled$PBRT$irradiance_cache_started_interpolation$v1(void);
extern void __dtrace_probe$PBRT$irradiance_cache_started_ray$v1$73747275637420526179446966666572656e7469616c202a(const struct RayDifferential *);
extern int __dtrace_isenabled$PBRT$irradiance_cache_started_ray$v1(void);
extern void __dtrace_probe$PBRT$kdtree_created_interior_node$v1$696e74$666c6f6174(int, float);
extern int __dtrace_isenabled$PBRT$kdtree_created_interior_node$v1(void);
extern void __dtrace_probe$PBRT$kdtree_created_leaf$v1$696e74$696e74(int, int);
extern int __dtrace_isenabled$PBRT$kdtree_created_leaf$v1(void);
extern void __dtrace_probe$PBRT$kdtree_finished_construction$v1$737472756374204b6454726565416363656c202a(const struct KdTreeAccel *);
extern int __dtrace_isenabled$PBRT$kdtree_finished_construction$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersection_finished$v1(void);
extern int __dtrace_isenabled$PBRT$kdtree_intersection_finished$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersection_hit$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$kdtree_intersection_hit$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersection_primitive_test$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$kdtree_intersection_primitive_test$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersection_test$v1$737472756374204b6454726565416363656c202a$73747275637420526179202a(const struct KdTreeAccel *, const struct Ray *);
extern int __dtrace_isenabled$PBRT$kdtree_intersection_test$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersection_traversed_interior_node$v1$737472756374204b64416363656c4e6f6465202a(const struct KdAccelNode *);
extern int __dtrace_isenabled$PBRT$kdtree_intersection_traversed_interior_node$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersection_traversed_leaf_node$v1$737472756374204b64416363656c4e6f6465202a$696e74(const struct KdAccelNode *, int);
extern int __dtrace_isenabled$PBRT$kdtree_intersection_traversed_leaf_node$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersectionp_hit$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$kdtree_intersectionp_hit$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersectionp_missed$v1(void);
extern int __dtrace_isenabled$PBRT$kdtree_intersectionp_missed$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersectionp_primitive_test$v1$737472756374205072696d6974697665202a(const struct Primitive *);
extern int __dtrace_isenabled$PBRT$kdtree_intersectionp_primitive_test$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersectionp_test$v1$737472756374204b6454726565416363656c202a$73747275637420526179202a(const struct KdTreeAccel *, const struct Ray *);
extern int __dtrace_isenabled$PBRT$kdtree_intersectionp_test$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersectionp_traversed_interior_node$v1$737472756374204b64416363656c4e6f6465202a(const struct KdAccelNode *);
extern int __dtrace_isenabled$PBRT$kdtree_intersectionp_traversed_interior_node$v1(void);
extern void __dtrace_probe$PBRT$kdtree_intersectionp_traversed_leaf_node$v1$737472756374204b64416363656c4e6f6465202a$696e74(const struct KdAccelNode *, int);
extern int __dtrace_isenabled$PBRT$kdtree_intersectionp_traversed_leaf_node$v1(void);
extern void __dtrace_probe$PBRT$kdtree_ray_missed_bounds$v1(void);
extern int __dtrace_isenabled$PBRT$kdtree_ray_missed_bounds$v1(void);
extern void __dtrace_probe$PBRT$kdtree_started_construction$v1$737472756374204b6454726565416363656c202a$696e74(const struct KdTreeAccel *, int);
extern int __dtrace_isenabled$PBRT$kdtree_started_construction$v1(void);
extern void __dtrace_probe$PBRT$loaded_image_map$v1$63686172202a$696e74$696e74$696e74$766f6964202a(const char *, int, int, int, const void *);
extern int __dtrace_isenabled$PBRT$loaded_image_map$v1(void);
extern void __dtrace_probe$PBRT$mipmap_ewa_filter$v1$766f6964202a$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$666c6f6174$696e74(const void *, float, float, float, float, float, float, float, float, float, int);
extern int __dtrace_isenabled$PBRT$mipmap_ewa_filter$v1(void);
extern void __dtrace_probe$PBRT$mipmap_trilinear_filter$v1$766f6964202a$666c6f6174$666c6f6174$666c6f6174$666c6f6174$696e74(const void *, float, float, float, float, int);
extern int __dtrace_isenabled$PBRT$mipmap_trilinear_filter$v1(void);
extern void __dtrace_probe$PBRT$mlt_accepted_mutation$v1$666c6f6174$737472756374204d4c5453616d706c65202a$737472756374204d4c5453616d706c65202a(float, const struct MLTSample *, const struct MLTSample *);
extern int __dtrace_isenabled$PBRT$mlt_accepted_mutation$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_bootstrapping$v1$666c6f6174(float);
extern int __dtrace_isenabled$PBRT$mlt_finished_bootstrapping$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_directlighting$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_directlighting$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_display_update$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_display_update$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_estimate_direct$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_estimate_direct$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_generate_path$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_generate_path$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_lbidir$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_lbidir$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_lpath$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_lpath$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_mlt_task$v1$737472756374204d4c545461736b202a(const struct MLTTask *);
extern int __dtrace_isenabled$PBRT$mlt_finished_mlt_task$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_mutation$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_mutation$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_rendering$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_rendering$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_sample_light_for_bidir$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_sample_light_for_bidir$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_sample_splat$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_sample_splat$v1(void);
extern void __dtrace_probe$PBRT$mlt_finished_task_init$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_finished_task_init$v1(void);
extern void __dtrace_probe$PBRT$mlt_rejected_mutation$v1$666c6f6174$737472756374204d4c5453616d706c65202a$737472756374204d4c5453616d706c65202a(float, const struct MLTSample *, const struct MLTSample *);
extern int __dtrace_isenabled$PBRT$mlt_rejected_mutation$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_bootstrapping$v1$696e74(int);
extern int __dtrace_isenabled$PBRT$mlt_started_bootstrapping$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_directlighting$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_directlighting$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_display_update$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_display_update$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_estimate_direct$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_estimate_direct$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_generate_path$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_generate_path$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_lbidir$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_lbidir$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_lpath$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_lpath$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_mlt_task$v1$737472756374204d4c545461736b202a(const struct MLTTask *);
extern int __dtrace_isenabled$PBRT$mlt_started_mlt_task$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_mutation$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_mutation$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_rendering$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_rendering$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_sample_light_for_bidir$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_sample_light_for_bidir$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_sample_splat$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_sample_splat$v1(void);
extern void __dtrace_probe$PBRT$mlt_started_task_init$v1(void);
extern int __dtrace_isenabled$PBRT$mlt_started_task_init$v1(void);
extern void __dtrace_probe$PBRT$photon_map_deposited_caustic_photon$v1$73747275637420446966666572656e7469616c47656f6d65747279202a$766f6964202a$73747275637420566563746f72202a(const struct DifferentialGeometry *, const void *, const struct Vector *);
extern int __dtrace_isenabled$PBRT$photon_map_deposited_caustic_photon$v1(void);
extern void __dtrace_probe$PBRT$photon_map_deposited_direct_photon$v1$73747275637420446966666572656e7469616c47656f6d65747279202a$766f6964202a$73747275637420566563746f72202a(const struct DifferentialGeometry *, const void *, const struct Vector *);
extern int __dtrace_isenabled$PBRT$photon_map_deposited_direct_photon$v1(void);
extern void __dtrace_probe$PBRT$photon_map_deposited_indirect_photon$v1$73747275637420446966666572656e7469616c47656f6d65747279202a$766f6964202a$73747275637420566563746f72202a(const struct DifferentialGeometry *, const void *, const struct Vector *);
extern int __dtrace_isenabled$PBRT$photon_map_deposited_indirect_photon$v1(void);
extern void __dtrace_probe$PBRT$photon_map_finished_gather_ray$v1$73747275637420526179446966666572656e7469616c202a(const struct RayDifferential *);
extern int __dtrace_isenabled$PBRT$photon_map_finished_gather_ray$v1(void);
extern void __dtrace_probe$PBRT$photon_map_finished_lookup$v1$73747275637420446966666572656e7469616c47656f6d65747279202a$696e74$696e74$766f6964202a(const struct DifferentialGeometry *, int, int, const void *);
extern int __dtrace_isenabled$PBRT$photon_map_finished_lookup$v1(void);
extern void __dtrace_probe$PBRT$photon_map_finished_ray_path$v1$73747275637420526179446966666572656e7469616c202a$766f6964202a(const struct RayDifferential *, const void *);
extern int __dtrace_isenabled$PBRT$photon_map_finished_ray_path$v1(void);
extern void __dtrace_probe$PBRT$photon_map_started_gather_ray$v1$73747275637420526179446966666572656e7469616c202a(const struct RayDifferential *);
extern int __dtrace_isenabled$PBRT$photon_map_started_gather_ray$v1(void);
extern void __dtrace_probe$PBRT$photon_map_started_lookup$v1$73747275637420446966666572656e7469616c47656f6d65747279202a(const struct DifferentialGeometry *);
extern int __dtrace_isenabled$PBRT$photon_map_started_lookup$v1(void);
extern void __dtrace_probe$PBRT$photon_map_started_ray_path$v1$73747275637420526179446966666572656e7469616c202a$766f6964202a(const struct RayDifferential *, const void *);
extern int __dtrace_isenabled$PBRT$photon_map_started_ray_path$v1(void);
extern void __dtrace_probe$PBRT$ray_triangle_intersection_hit$v1$73747275637420526179202a$666c6f6174(const struct Ray *, float);
extern int __dtrace_isenabled$PBRT$ray_triangle_intersection_hit$v1(void);
extern void __dtrace_probe$PBRT$ray_triangle_intersection_test$v1$73747275637420526179202a$73747275637420547269616e676c65202a(const struct Ray *, const struct Triangle *);
extern int __dtrace_isenabled$PBRT$ray_triangle_intersection_test$v1(void);
extern void __dtrace_probe$PBRT$ray_triangle_intersectionp_hit$v1$73747275637420526179202a$666c6f6174(const struct Ray *, float);
extern int __dtrace_isenabled$PBRT$ray_triangle_intersectionp_hit$v1(void);
extern void __dtrace_probe$PBRT$ray_triangle_intersectionp_test$v1$73747275637420526179202a$73747275637420547269616e676c65202a(const struct Ray *, const struct Triangle *);
extern int __dtrace_isenabled$PBRT$ray_triangle_intersectionp_test$v1(void);
extern void __dtrace_probe$PBRT$rng_finished_random_float$v1(void);
extern int __dtrace_isenabled$PBRT$rng_finished_random_float$v1(void);
extern void __dtrace_probe$PBRT$rng_finished_tablegen$v1(void);
extern int __dtrace_isenabled$PBRT$rng_finished_tablegen$v1(void);
extern void __dtrace_probe$PBRT$rng_started_random_float$v1(void);
extern int __dtrace_isenabled$PBRT$rng_started_random_float$v1(void);
extern void __dtrace_probe$PBRT$rng_started_tablegen$v1(void);
extern int __dtrace_isenabled$PBRT$rng_started_tablegen$v1(void);
extern void __dtrace_probe$PBRT$sample_outside_image_extent$v1$7374727563742043616d65726153616d706c65202a(const struct CameraSample *);
extern int __dtrace_isenabled$PBRT$sample_outside_image_extent$v1(void);
extern void __dtrace_probe$PBRT$started_adding_image_sample$v1$7374727563742053616d706c65202a$73747275637420526179446966666572656e7469616c202a$766f6964202a$766f6964202a(const struct Sample *, const struct RayDifferential *, const void *, const void *);
extern int __dtrace_isenabled$PBRT$started_adding_image_sample$v1(void);
extern void __dtrace_probe$PBRT$started_bsdf_eval$v1(void);
extern int __dtrace_isenabled$PBRT$started_bsdf_eval$v1(void);
extern void __dtrace_probe$PBRT$started_bsdf_pdf$v1(void);
extern int __dtrace_isenabled$PBRT$started_bsdf_pdf$v1(void);
extern void __dtrace_probe$PBRT$started_bsdf_sample$v1(void);
extern int __dtrace_isenabled$PBRT$started_bsdf_sample$v1(void);
extern void __dtrace_probe$PBRT$started_bsdf_shading$v1$73747275637420526179202a(const struct Ray *);
extern int __dtrace_isenabled$PBRT$started_bsdf_shading$v1(void);
extern void __dtrace_probe$PBRT$started_bssrdf_shading$v1$73747275637420526179202a(const struct Ray *);
extern int __dtrace_isenabled$PBRT$started_bssrdf_shading$v1(void);
extern void __dtrace_probe$PBRT$started_camera_ray_integration$v1$73747275637420526179446966666572656e7469616c202a$7374727563742053616d706c65202a(const struct RayDifferential *, const struct Sample *);
extern int __dtrace_isenabled$PBRT$started_camera_ray_integration$v1(void);
extern void __dtrace_probe$PBRT$started_ewa_texture_lookup$v1$666c6f6174$666c6f6174(float, float);
extern int __dtrace_isenabled$PBRT$started_ewa_texture_lookup$v1(void);
extern void __dtrace_probe$PBRT$started_generating_camera_ray$v1$7374727563742043616d65726153616d706c65202a(const struct CameraSample *);
extern int __dtrace_isenabled$PBRT$started_generating_camera_ray$v1(void);
extern void __dtrace_probe$PBRT$started_parsing$v1(void);
extern int __dtrace_isenabled$PBRT$started_parsing$v1(void);
extern void __dtrace_probe$PBRT$started_preprocessing$v1(void);
extern int __dtrace_isenabled$PBRT$started_preprocessing$v1(void);
extern void __dtrace_probe$PBRT$started_ray_intersection$v1$73747275637420526179202a(const struct Ray *);
extern int __dtrace_isenabled$PBRT$started_ray_intersection$v1(void);
extern void __dtrace_probe$PBRT$started_ray_intersectionp$v1$73747275637420526179202a(const struct Ray *);
extern int __dtrace_isenabled$PBRT$started_ray_intersectionp$v1(void);
extern void __dtrace_probe$PBRT$started_rendering$v1(void);
extern int __dtrace_isenabled$PBRT$started_rendering$v1(void);
extern void __dtrace_probe$PBRT$started_rendertask$v1$696e74(int);
extern int __dtrace_isenabled$PBRT$started_rendertask$v1(void);
extern void __dtrace_probe$PBRT$started_specular_reflection_ray$v1$73747275637420526179446966666572656e7469616c202a(const struct RayDifferential *);
extern int __dtrace_isenabled$PBRT$started_specular_reflection_ray$v1(void);
extern void __dtrace_probe$PBRT$started_specular_refraction_ray$v1$73747275637420526179446966666572656e7469616c202a(const struct RayDifferential *);
extern int __dtrace_isenabled$PBRT$started_specular_refraction_ray$v1(void);
extern void __dtrace_probe$PBRT$started_task$v1$737472756374205461736b202a(const struct Task *);
extern int __dtrace_isenabled$PBRT$started_task$v1(void);
extern void __dtrace_probe$PBRT$started_trilinear_texture_lookup$v1$666c6f6174$666c6f6174(float, float);
extern int __dtrace_isenabled$PBRT$started_trilinear_texture_lookup$v1(void);
extern void __dtrace_probe$PBRT$subsurface_added_interior_contribution$v1$73747275637420537562737572666163654f63747265654e6f6465202a(const struct SubsurfaceOctreeNode *);
extern int __dtrace_isenabled$PBRT$subsurface_added_interior_contribution$v1(void);
extern void __dtrace_probe$PBRT$subsurface_added_point_contribution$v1$73747275637420497272616469616e6365506f696e74202a(const struct IrradiancePoint *);
extern int __dtrace_isenabled$PBRT$subsurface_added_point_contribution$v1(void);
extern void __dtrace_probe$PBRT$subsurface_added_point_to_octree$v1$7374727563742053757266616365506f696e74202a$666c6f6174(const struct SurfacePoint *, float);
extern int __dtrace_isenabled$PBRT$subsurface_added_point_to_octree$v1(void);
extern void __dtrace_probe$PBRT$subsurface_computed_irradiance_at_point$v1$7374727563742053757266616365506f696e74202a$766f6964202a(const struct SurfacePoint *, const void *);
extern int __dtrace_isenabled$PBRT$subsurface_computed_irradiance_at_point$v1(void);
extern void __dtrace_probe$PBRT$subsurface_finished_computing_irradiance_values$v1(void);
extern int __dtrace_isenabled$PBRT$subsurface_finished_computing_irradiance_values$v1(void);
extern void __dtrace_probe$PBRT$subsurface_finished_octree_lookup$v1(void);
extern int __dtrace_isenabled$PBRT$subsurface_finished_octree_lookup$v1(void);
extern void __dtrace_probe$PBRT$subsurface_finished_rays_for_points$v1$696e74$696e74(int, int);
extern int __dtrace_isenabled$PBRT$subsurface_finished_rays_for_points$v1(void);
extern void __dtrace_probe$PBRT$subsurface_started_computing_irradiance_values$v1(void);
extern int __dtrace_isenabled$PBRT$subsurface_started_computing_irradiance_values$v1(void);
extern void __dtrace_probe$PBRT$subsurface_started_octree_lookup$v1$73747275637420506f696e74202a(const struct Point *);
extern int __dtrace_isenabled$PBRT$subsurface_started_octree_lookup$v1(void);
extern void __dtrace_probe$PBRT$subsurface_started_rays_for_points$v1(void);
extern int __dtrace_isenabled$PBRT$subsurface_started_rays_for_points$v1(void);
extern void __dtrace_probe$PBRT$supersample_pixel_no$v1$696e74$696e74(int, int);
extern int __dtrace_isenabled$PBRT$supersample_pixel_no$v1(void);
extern void __dtrace_probe$PBRT$supersample_pixel_yes$v1$696e74$696e74(int, int);
extern int __dtrace_isenabled$PBRT$supersample_pixel_yes$v1(void);

#else

#define	PBRT_ACCESSED_TEXEL(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	PBRT_ACCESSED_TEXEL_ENABLED() (0)
#define	PBRT_ALLOCATED_CACHED_TRANSFORM() \
do { \
	} while (0)
#define	PBRT_ALLOCATED_CACHED_TRANSFORM_ENABLED() (0)
#define	PBRT_AREA_LIGHT_FINISHED_SAMPLE() \
do { \
	} while (0)
#define	PBRT_AREA_LIGHT_FINISHED_SAMPLE_ENABLED() (0)
#define	PBRT_AREA_LIGHT_STARTED_SAMPLE() \
do { \
	} while (0)
#define	PBRT_AREA_LIGHT_STARTED_SAMPLE_ENABLED() (0)
#define	PBRT_ATOMIC_MEMORY_OP() \
do { \
	} while (0)
#define	PBRT_ATOMIC_MEMORY_OP_ENABLED() (0)
#define	PBRT_BVH_FINISHED_CONSTRUCTION(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_FINISHED_CONSTRUCTION_ENABLED() (0)
#define	PBRT_BVH_INTERSECTION_FINISHED() \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTION_FINISHED_ENABLED() (0)
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_HIT(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_HIT_ENABLED() (0)
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_MISSED(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_MISSED_ENABLED() (0)
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_TEST(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTION_PRIMITIVE_TEST_ENABLED() (0)
#define	PBRT_BVH_INTERSECTION_STARTED(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTION_STARTED_ENABLED() (0)
#define	PBRT_BVH_INTERSECTION_TRAVERSED_INTERIOR_NODE(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTION_TRAVERSED_INTERIOR_NODE_ENABLED() (0)
#define	PBRT_BVH_INTERSECTION_TRAVERSED_LEAF_NODE(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTION_TRAVERSED_LEAF_NODE_ENABLED() (0)
#define	PBRT_BVH_INTERSECTIONP_FINISHED() \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTIONP_FINISHED_ENABLED() (0)
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_HIT(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_HIT_ENABLED() (0)
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_MISSED(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_MISSED_ENABLED() (0)
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_TEST(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTIONP_PRIMITIVE_TEST_ENABLED() (0)
#define	PBRT_BVH_INTERSECTIONP_STARTED(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTIONP_STARTED_ENABLED() (0)
#define	PBRT_BVH_INTERSECTIONP_TRAVERSED_INTERIOR_NODE(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTIONP_TRAVERSED_INTERIOR_NODE_ENABLED() (0)
#define	PBRT_BVH_INTERSECTIONP_TRAVERSED_LEAF_NODE(arg0) \
do { \
	} while (0)
#define	PBRT_BVH_INTERSECTIONP_TRAVERSED_LEAF_NODE_ENABLED() (0)
#define	PBRT_BVH_STARTED_CONSTRUCTION(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_BVH_STARTED_CONSTRUCTION_ENABLED() (0)
#define	PBRT_CREATED_SHAPE(arg0) \
do { \
	} while (0)
#define	PBRT_CREATED_SHAPE_ENABLED() (0)
#define	PBRT_CREATED_TRIANGLE(arg0) \
do { \
	} while (0)
#define	PBRT_CREATED_TRIANGLE_ENABLED() (0)
#define	PBRT_FINISHED_ADDING_IMAGE_SAMPLE() \
do { \
	} while (0)
#define	PBRT_FINISHED_ADDING_IMAGE_SAMPLE_ENABLED() (0)
#define	PBRT_FINISHED_BSDF_EVAL() \
do { \
	} while (0)
#define	PBRT_FINISHED_BSDF_EVAL_ENABLED() (0)
#define	PBRT_FINISHED_BSDF_PDF() \
do { \
	} while (0)
#define	PBRT_FINISHED_BSDF_PDF_ENABLED() (0)
#define	PBRT_FINISHED_BSDF_SAMPLE() \
do { \
	} while (0)
#define	PBRT_FINISHED_BSDF_SAMPLE_ENABLED() (0)
#define	PBRT_FINISHED_BSDF_SHADING(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_FINISHED_BSDF_SHADING_ENABLED() (0)
#define	PBRT_FINISHED_BSSRDF_SHADING(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_FINISHED_BSSRDF_SHADING_ENABLED() (0)
#define	PBRT_FINISHED_CAMERA_RAY_INTEGRATION(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_FINISHED_CAMERA_RAY_INTEGRATION_ENABLED() (0)
#define	PBRT_FINISHED_EWA_TEXTURE_LOOKUP() \
do { \
	} while (0)
#define	PBRT_FINISHED_EWA_TEXTURE_LOOKUP_ENABLED() (0)
#define	PBRT_FINISHED_GENERATING_CAMERA_RAY(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_FINISHED_GENERATING_CAMERA_RAY_ENABLED() (0)
#define	PBRT_FINISHED_PARSING() \
do { \
	} while (0)
#define	PBRT_FINISHED_PARSING_ENABLED() (0)
#define	PBRT_FINISHED_PREPROCESSING() \
do { \
	} while (0)
#define	PBRT_FINISHED_PREPROCESSING_ENABLED() (0)
#define	PBRT_FINISHED_RAY_INTERSECTION(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_FINISHED_RAY_INTERSECTION_ENABLED() (0)
#define	PBRT_FINISHED_RAY_INTERSECTIONP(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_FINISHED_RAY_INTERSECTIONP_ENABLED() (0)
#define	PBRT_FINISHED_RENDERING() \
do { \
	} while (0)
#define	PBRT_FINISHED_RENDERING_ENABLED() (0)
#define	PBRT_FINISHED_RENDERTASK(arg0) \
do { \
	} while (0)
#define	PBRT_FINISHED_RENDERTASK_ENABLED() (0)
#define	PBRT_FINISHED_SPECULAR_REFLECTION_RAY(arg0) \
do { \
	} while (0)
#define	PBRT_FINISHED_SPECULAR_REFLECTION_RAY_ENABLED() (0)
#define	PBRT_FINISHED_SPECULAR_REFRACTION_RAY(arg0) \
do { \
	} while (0)
#define	PBRT_FINISHED_SPECULAR_REFRACTION_RAY_ENABLED() (0)
#define	PBRT_FINISHED_TASK(arg0) \
do { \
	} while (0)
#define	PBRT_FINISHED_TASK_ENABLED() (0)
#define	PBRT_FINISHED_TRILINEAR_TEXTURE_LOOKUP() \
do { \
	} while (0)
#define	PBRT_FINISHED_TRILINEAR_TEXTURE_LOOKUP_ENABLED() (0)
#define	PBRT_FOUND_CACHED_TRANSFORM() \
do { \
	} while (0)
#define	PBRT_FOUND_CACHED_TRANSFORM_ENABLED() (0)
#define	PBRT_GRID_BOUNDS_AND_RESOLUTION(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_GRID_BOUNDS_AND_RESOLUTION_ENABLED() (0)
#define	PBRT_GRID_FINISHED_CONSTRUCTION(arg0) \
do { \
	} while (0)
#define	PBRT_GRID_FINISHED_CONSTRUCTION_ENABLED() (0)
#define	PBRT_GRID_INTERSECTION_TEST(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_GRID_INTERSECTION_TEST_ENABLED() (0)
#define	PBRT_GRID_INTERSECTIONP_TEST(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_GRID_INTERSECTIONP_TEST_ENABLED() (0)
#define	PBRT_GRID_RAY_MISSED_BOUNDS() \
do { \
	} while (0)
#define	PBRT_GRID_RAY_MISSED_BOUNDS_ENABLED() (0)
#define	PBRT_GRID_RAY_PRIMITIVE_HIT(arg0) \
do { \
	} while (0)
#define	PBRT_GRID_RAY_PRIMITIVE_HIT_ENABLED() (0)
#define	PBRT_GRID_RAY_PRIMITIVE_INTERSECTION_TEST(arg0) \
do { \
	} while (0)
#define	PBRT_GRID_RAY_PRIMITIVE_INTERSECTION_TEST_ENABLED() (0)
#define	PBRT_GRID_RAY_PRIMITIVE_INTERSECTIONP_TEST(arg0) \
do { \
	} while (0)
#define	PBRT_GRID_RAY_PRIMITIVE_INTERSECTIONP_TEST_ENABLED() (0)
#define	PBRT_GRID_RAY_TRAVERSED_VOXEL(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_GRID_RAY_TRAVERSED_VOXEL_ENABLED() (0)
#define	PBRT_GRID_STARTED_CONSTRUCTION(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_GRID_STARTED_CONSTRUCTION_ENABLED() (0)
#define	PBRT_GRID_VOXELIZED_PRIMITIVE(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_GRID_VOXELIZED_PRIMITIVE_ENABLED() (0)
#define	PBRT_INFINITE_LIGHT_FINISHED_PDF() \
do { \
	} while (0)
#define	PBRT_INFINITE_LIGHT_FINISHED_PDF_ENABLED() (0)
#define	PBRT_INFINITE_LIGHT_FINISHED_SAMPLE() \
do { \
	} while (0)
#define	PBRT_INFINITE_LIGHT_FINISHED_SAMPLE_ENABLED() (0)
#define	PBRT_INFINITE_LIGHT_STARTED_PDF() \
do { \
	} while (0)
#define	PBRT_INFINITE_LIGHT_STARTED_PDF_ENABLED() (0)
#define	PBRT_INFINITE_LIGHT_STARTED_SAMPLE() \
do { \
	} while (0)
#define	PBRT_INFINITE_LIGHT_STARTED_SAMPLE_ENABLED() (0)
#define	PBRT_IRRADIANCE_CACHE_ADDED_NEW_SAMPLE(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	} while (0)
#define	PBRT_IRRADIANCE_CACHE_ADDED_NEW_SAMPLE_ENABLED() (0)
#define	PBRT_IRRADIANCE_CACHE_CHECKED_SAMPLE(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_IRRADIANCE_CACHE_CHECKED_SAMPLE_ENABLED() (0)
#define	PBRT_IRRADIANCE_CACHE_FINISHED_COMPUTING_IRRADIANCE(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_IRRADIANCE_CACHE_FINISHED_COMPUTING_IRRADIANCE_ENABLED() (0)
#define	PBRT_IRRADIANCE_CACHE_FINISHED_INTERPOLATION(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	PBRT_IRRADIANCE_CACHE_FINISHED_INTERPOLATION_ENABLED() (0)
#define	PBRT_IRRADIANCE_CACHE_FINISHED_RAY(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_IRRADIANCE_CACHE_FINISHED_RAY_ENABLED() (0)
#define	PBRT_IRRADIANCE_CACHE_STARTED_COMPUTING_IRRADIANCE(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_IRRADIANCE_CACHE_STARTED_COMPUTING_IRRADIANCE_ENABLED() (0)
#define	PBRT_IRRADIANCE_CACHE_STARTED_INTERPOLATION(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_IRRADIANCE_CACHE_STARTED_INTERPOLATION_ENABLED() (0)
#define	PBRT_IRRADIANCE_CACHE_STARTED_RAY(arg0) \
do { \
	} while (0)
#define	PBRT_IRRADIANCE_CACHE_STARTED_RAY_ENABLED() (0)
#define	PBRT_KDTREE_CREATED_INTERIOR_NODE(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_KDTREE_CREATED_INTERIOR_NODE_ENABLED() (0)
#define	PBRT_KDTREE_CREATED_LEAF(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_KDTREE_CREATED_LEAF_ENABLED() (0)
#define	PBRT_KDTREE_FINISHED_CONSTRUCTION(arg0) \
do { \
	} while (0)
#define	PBRT_KDTREE_FINISHED_CONSTRUCTION_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTION_FINISHED() \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTION_FINISHED_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTION_HIT(arg0) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTION_HIT_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTION_PRIMITIVE_TEST(arg0) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTION_PRIMITIVE_TEST_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTION_TEST(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTION_TEST_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTION_TRAVERSED_INTERIOR_NODE(arg0) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTION_TRAVERSED_INTERIOR_NODE_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTION_TRAVERSED_LEAF_NODE(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTION_TRAVERSED_LEAF_NODE_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTIONP_HIT(arg0) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_HIT_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTIONP_MISSED() \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_MISSED_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTIONP_PRIMITIVE_TEST(arg0) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_PRIMITIVE_TEST_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTIONP_TEST(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_TEST_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTIONP_TRAVERSED_INTERIOR_NODE(arg0) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_TRAVERSED_INTERIOR_NODE_ENABLED() (0)
#define	PBRT_KDTREE_INTERSECTIONP_TRAVERSED_LEAF_NODE(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_KDTREE_INTERSECTIONP_TRAVERSED_LEAF_NODE_ENABLED() (0)
#define	PBRT_KDTREE_RAY_MISSED_BOUNDS() \
do { \
	} while (0)
#define	PBRT_KDTREE_RAY_MISSED_BOUNDS_ENABLED() (0)
#define	PBRT_KDTREE_STARTED_CONSTRUCTION(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_KDTREE_STARTED_CONSTRUCTION_ENABLED() (0)
#define	PBRT_LOADED_IMAGE_MAP(arg0, arg1, arg2, arg3, arg4) \
do { \
	} while (0)
#define	PBRT_LOADED_IMAGE_MAP_ENABLED() (0)
#define	PBRT_MIPMAP_EWA_FILTER(arg0, arg1, arg2, arg3, arg4, arg5, arg6, arg7, arg8, arg9, arg10) \
do { \
	} while (0)
#define	PBRT_MIPMAP_EWA_FILTER_ENABLED() (0)
#define	PBRT_MIPMAP_TRILINEAR_FILTER(arg0, arg1, arg2, arg3, arg4, arg5) \
do { \
	} while (0)
#define	PBRT_MIPMAP_TRILINEAR_FILTER_ENABLED() (0)
#define	PBRT_MLT_ACCEPTED_MUTATION(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_MLT_ACCEPTED_MUTATION_ENABLED() (0)
#define	PBRT_MLT_FINISHED_BOOTSTRAPPING(arg0) \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_BOOTSTRAPPING_ENABLED() (0)
#define	PBRT_MLT_FINISHED_DIRECTLIGHTING() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_DIRECTLIGHTING_ENABLED() (0)
#define	PBRT_MLT_FINISHED_DISPLAY_UPDATE() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_DISPLAY_UPDATE_ENABLED() (0)
#define	PBRT_MLT_FINISHED_ESTIMATE_DIRECT() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_ESTIMATE_DIRECT_ENABLED() (0)
#define	PBRT_MLT_FINISHED_GENERATE_PATH() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_GENERATE_PATH_ENABLED() (0)
#define	PBRT_MLT_FINISHED_LBIDIR() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_LBIDIR_ENABLED() (0)
#define	PBRT_MLT_FINISHED_LPATH() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_LPATH_ENABLED() (0)
#define	PBRT_MLT_FINISHED_MLT_TASK(arg0) \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_MLT_TASK_ENABLED() (0)
#define	PBRT_MLT_FINISHED_MUTATION() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_MUTATION_ENABLED() (0)
#define	PBRT_MLT_FINISHED_RENDERING() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_RENDERING_ENABLED() (0)
#define	PBRT_MLT_FINISHED_SAMPLE_LIGHT_FOR_BIDIR() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_SAMPLE_LIGHT_FOR_BIDIR_ENABLED() (0)
#define	PBRT_MLT_FINISHED_SAMPLE_SPLAT() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_SAMPLE_SPLAT_ENABLED() (0)
#define	PBRT_MLT_FINISHED_TASK_INIT() \
do { \
	} while (0)
#define	PBRT_MLT_FINISHED_TASK_INIT_ENABLED() (0)
#define	PBRT_MLT_REJECTED_MUTATION(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_MLT_REJECTED_MUTATION_ENABLED() (0)
#define	PBRT_MLT_STARTED_BOOTSTRAPPING(arg0) \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_BOOTSTRAPPING_ENABLED() (0)
#define	PBRT_MLT_STARTED_DIRECTLIGHTING() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_DIRECTLIGHTING_ENABLED() (0)
#define	PBRT_MLT_STARTED_DISPLAY_UPDATE() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_DISPLAY_UPDATE_ENABLED() (0)
#define	PBRT_MLT_STARTED_ESTIMATE_DIRECT() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_ESTIMATE_DIRECT_ENABLED() (0)
#define	PBRT_MLT_STARTED_GENERATE_PATH() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_GENERATE_PATH_ENABLED() (0)
#define	PBRT_MLT_STARTED_LBIDIR() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_LBIDIR_ENABLED() (0)
#define	PBRT_MLT_STARTED_LPATH() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_LPATH_ENABLED() (0)
#define	PBRT_MLT_STARTED_MLT_TASK(arg0) \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_MLT_TASK_ENABLED() (0)
#define	PBRT_MLT_STARTED_MUTATION() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_MUTATION_ENABLED() (0)
#define	PBRT_MLT_STARTED_RENDERING() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_RENDERING_ENABLED() (0)
#define	PBRT_MLT_STARTED_SAMPLE_LIGHT_FOR_BIDIR() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_SAMPLE_LIGHT_FOR_BIDIR_ENABLED() (0)
#define	PBRT_MLT_STARTED_SAMPLE_SPLAT() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_SAMPLE_SPLAT_ENABLED() (0)
#define	PBRT_MLT_STARTED_TASK_INIT() \
do { \
	} while (0)
#define	PBRT_MLT_STARTED_TASK_INIT_ENABLED() (0)
#define	PBRT_PHOTON_MAP_DEPOSITED_CAUSTIC_PHOTON(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_PHOTON_MAP_DEPOSITED_CAUSTIC_PHOTON_ENABLED() (0)
#define	PBRT_PHOTON_MAP_DEPOSITED_DIRECT_PHOTON(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_PHOTON_MAP_DEPOSITED_DIRECT_PHOTON_ENABLED() (0)
#define	PBRT_PHOTON_MAP_DEPOSITED_INDIRECT_PHOTON(arg0, arg1, arg2) \
do { \
	} while (0)
#define	PBRT_PHOTON_MAP_DEPOSITED_INDIRECT_PHOTON_ENABLED() (0)
#define	PBRT_PHOTON_MAP_FINISHED_GATHER_RAY(arg0) \
do { \
	} while (0)
#define	PBRT_PHOTON_MAP_FINISHED_GATHER_RAY_ENABLED() (0)
#define	PBRT_PHOTON_MAP_FINISHED_LOOKUP(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	PBRT_PHOTON_MAP_FINISHED_LOOKUP_ENABLED() (0)
#define	PBRT_PHOTON_MAP_FINISHED_RAY_PATH(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_PHOTON_MAP_FINISHED_RAY_PATH_ENABLED() (0)
#define	PBRT_PHOTON_MAP_STARTED_GATHER_RAY(arg0) \
do { \
	} while (0)
#define	PBRT_PHOTON_MAP_STARTED_GATHER_RAY_ENABLED() (0)
#define	PBRT_PHOTON_MAP_STARTED_LOOKUP(arg0) \
do { \
	} while (0)
#define	PBRT_PHOTON_MAP_STARTED_LOOKUP_ENABLED() (0)
#define	PBRT_PHOTON_MAP_STARTED_RAY_PATH(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_PHOTON_MAP_STARTED_RAY_PATH_ENABLED() (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTION_HIT(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTION_HIT_ENABLED() (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTION_TEST(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTION_TEST_ENABLED() (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTIONP_HIT(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTIONP_HIT_ENABLED() (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTIONP_TEST(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_RAY_TRIANGLE_INTERSECTIONP_TEST_ENABLED() (0)
#define	PBRT_RNG_FINISHED_RANDOM_FLOAT() \
do { \
	} while (0)
#define	PBRT_RNG_FINISHED_RANDOM_FLOAT_ENABLED() (0)
#define	PBRT_RNG_FINISHED_TABLEGEN() \
do { \
	} while (0)
#define	PBRT_RNG_FINISHED_TABLEGEN_ENABLED() (0)
#define	PBRT_RNG_STARTED_RANDOM_FLOAT() \
do { \
	} while (0)
#define	PBRT_RNG_STARTED_RANDOM_FLOAT_ENABLED() (0)
#define	PBRT_RNG_STARTED_TABLEGEN() \
do { \
	} while (0)
#define	PBRT_RNG_STARTED_TABLEGEN_ENABLED() (0)
#define	PBRT_SAMPLE_OUTSIDE_IMAGE_EXTENT(arg0) \
do { \
	} while (0)
#define	PBRT_SAMPLE_OUTSIDE_IMAGE_EXTENT_ENABLED() (0)
#define	PBRT_STARTED_ADDING_IMAGE_SAMPLE(arg0, arg1, arg2, arg3) \
do { \
	} while (0)
#define	PBRT_STARTED_ADDING_IMAGE_SAMPLE_ENABLED() (0)
#define	PBRT_STARTED_BSDF_EVAL() \
do { \
	} while (0)
#define	PBRT_STARTED_BSDF_EVAL_ENABLED() (0)
#define	PBRT_STARTED_BSDF_PDF() \
do { \
	} while (0)
#define	PBRT_STARTED_BSDF_PDF_ENABLED() (0)
#define	PBRT_STARTED_BSDF_SAMPLE() \
do { \
	} while (0)
#define	PBRT_STARTED_BSDF_SAMPLE_ENABLED() (0)
#define	PBRT_STARTED_BSDF_SHADING(arg0) \
do { \
	} while (0)
#define	PBRT_STARTED_BSDF_SHADING_ENABLED() (0)
#define	PBRT_STARTED_BSSRDF_SHADING(arg0) \
do { \
	} while (0)
#define	PBRT_STARTED_BSSRDF_SHADING_ENABLED() (0)
#define	PBRT_STARTED_CAMERA_RAY_INTEGRATION(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_STARTED_CAMERA_RAY_INTEGRATION_ENABLED() (0)
#define	PBRT_STARTED_EWA_TEXTURE_LOOKUP(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_STARTED_EWA_TEXTURE_LOOKUP_ENABLED() (0)
#define	PBRT_STARTED_GENERATING_CAMERA_RAY(arg0) \
do { \
	} while (0)
#define	PBRT_STARTED_GENERATING_CAMERA_RAY_ENABLED() (0)
#define	PBRT_STARTED_PARSING() \
do { \
	} while (0)
#define	PBRT_STARTED_PARSING_ENABLED() (0)
#define	PBRT_STARTED_PREPROCESSING() \
do { \
	} while (0)
#define	PBRT_STARTED_PREPROCESSING_ENABLED() (0)
#define	PBRT_STARTED_RAY_INTERSECTION(arg0) \
do { \
	} while (0)
#define	PBRT_STARTED_RAY_INTERSECTION_ENABLED() (0)
#define	PBRT_STARTED_RAY_INTERSECTIONP(arg0) \
do { \
	} while (0)
#define	PBRT_STARTED_RAY_INTERSECTIONP_ENABLED() (0)
#define	PBRT_STARTED_RENDERING() \
do { \
	} while (0)
#define	PBRT_STARTED_RENDERING_ENABLED() (0)
#define	PBRT_STARTED_RENDERTASK(arg0) \
do { \
	} while (0)
#define	PBRT_STARTED_RENDERTASK_ENABLED() (0)
#define	PBRT_STARTED_SPECULAR_REFLECTION_RAY(arg0) \
do { \
	} while (0)
#define	PBRT_STARTED_SPECULAR_REFLECTION_RAY_ENABLED() (0)
#define	PBRT_STARTED_SPECULAR_REFRACTION_RAY(arg0) \
do { \
	} while (0)
#define	PBRT_STARTED_SPECULAR_REFRACTION_RAY_ENABLED() (0)
#define	PBRT_STARTED_TASK(arg0) \
do { \
	} while (0)
#define	PBRT_STARTED_TASK_ENABLED() (0)
#define	PBRT_STARTED_TRILINEAR_TEXTURE_LOOKUP(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_STARTED_TRILINEAR_TEXTURE_LOOKUP_ENABLED() (0)
#define	PBRT_SUBSURFACE_ADDED_INTERIOR_CONTRIBUTION(arg0) \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_ADDED_INTERIOR_CONTRIBUTION_ENABLED() (0)
#define	PBRT_SUBSURFACE_ADDED_POINT_CONTRIBUTION(arg0) \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_ADDED_POINT_CONTRIBUTION_ENABLED() (0)
#define	PBRT_SUBSURFACE_ADDED_POINT_TO_OCTREE(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_ADDED_POINT_TO_OCTREE_ENABLED() (0)
#define	PBRT_SUBSURFACE_COMPUTED_IRRADIANCE_AT_POINT(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_COMPUTED_IRRADIANCE_AT_POINT_ENABLED() (0)
#define	PBRT_SUBSURFACE_FINISHED_COMPUTING_IRRADIANCE_VALUES() \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_FINISHED_COMPUTING_IRRADIANCE_VALUES_ENABLED() (0)
#define	PBRT_SUBSURFACE_FINISHED_OCTREE_LOOKUP() \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_FINISHED_OCTREE_LOOKUP_ENABLED() (0)
#define	PBRT_SUBSURFACE_FINISHED_RAYS_FOR_POINTS(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_FINISHED_RAYS_FOR_POINTS_ENABLED() (0)
#define	PBRT_SUBSURFACE_STARTED_COMPUTING_IRRADIANCE_VALUES() \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_STARTED_COMPUTING_IRRADIANCE_VALUES_ENABLED() (0)
#define	PBRT_SUBSURFACE_STARTED_OCTREE_LOOKUP(arg0) \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_STARTED_OCTREE_LOOKUP_ENABLED() (0)
#define	PBRT_SUBSURFACE_STARTED_RAYS_FOR_POINTS() \
do { \
	} while (0)
#define	PBRT_SUBSURFACE_STARTED_RAYS_FOR_POINTS_ENABLED() (0)
#define	PBRT_SUPERSAMPLE_PIXEL_NO(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_SUPERSAMPLE_PIXEL_NO_ENABLED() (0)
#define	PBRT_SUPERSAMPLE_PIXEL_YES(arg0, arg1) \
do { \
	} while (0)
#define	PBRT_SUPERSAMPLE_PIXEL_YES_ENABLED() (0)

#endif /* !defined(DTRACE_PROBES_DISABLED) || !DTRACE_PROBES_DISABLED */


#ifdef	__cplusplus
}
#endif

#endif	/* _DTRACE_H */
